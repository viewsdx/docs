(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{"./WhyNotViews/README.md":function(e,n,a){"use strict";a.r(n);var t=a("./node_modules/react/index.js"),o=a.n(t),r=a("./node_modules/@mdx-js/tag/dist/index.js");function s(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}n.default=function(e){var n=e.components;s(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:n},o.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"why-not-views"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h1",props:{"aria-hidden":!0,href:"#why-not-views"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Why not Views?"),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"i-use-different-target-platform"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#i-use-different-target-platform"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"I use different target platform"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Views morphs to React and React Native. If you use Vue, Angular, or any other\nfront-end library that Views doesn't currently morph to you will have to write\nnew morpher, and we can guide you through the process."),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"i-need-more-integration-with-my-current-code-editor"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#i-need-more-integration-with-my-current-code-editor"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"I need more integration with my current code editor"),o.a.createElement(r.MDXTag,{name:"p",components:n},"The current level of integration in the code editors stops at syntax highlighting\nfor Views language."),o.a.createElement(r.MDXTag,{name:"p",components:n},"You can contribute to linting for Views ",o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/viewstools/morph/issues/19"}},"Contribute here"),"."),o.a.createElement(r.MDXTag,{name:"p",components:n},"Your logic files will work with your current linting tools, because they are Javascript."),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"i-want-to-use-views-tools-for-react-native-app"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#i-want-to-use-views-tools-for-react-native-app"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"I want to use Views Tools for React Native app"),o.a.createElement(r.MDXTag,{name:"p",components:n},"The morphing process is not yet 100% accurate between React Web and React Native,\nand results in some discrepancies between what you see in the Tools and in the app running\non a real device, or iOS simulator. ",o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/viewstools/morph/issues/47"}},"Contribute here")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"i-want-to-mix-logic-and-interface-styling-in-the-same-component"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#i-want-to-mix-logic-and-interface-styling-in-the-same-component"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"I want to mix logic and interface styling in the same component"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Views has a specific pattern to separate logic from interface composition.\nWe do that because the interface changes more often than the logic. That means,\nonce the ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"slots")," (props) contract is set, the changes in design are decoupled from the logic,\nand both teams can work in parallel."),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"my-designers-want-to-control-animations"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#my-designers-want-to-control-animations"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),o.a.createElement(r.MDXTag,{name:"del",components:n,parentName:"h2"},"My designers want to control animations")),o.a.createElement(r.MDXTag,{name:"blockquote",components:n},o.a.createElement(r.MDXTag,{name:"p",components:n,parentName:"blockquote"},"This is already implemented in the v14 of the morpher and tools! \ud83c\udf89")),o.a.createElement(r.MDXTag,{name:"p",components:n},o.a.createElement(r.MDXTag,{name:"del",components:n,parentName:"p"},"We are working on cross-platform animations in the Views language ",o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"del",props:{href:"https://github.com/viewstools/morph/issues/11"}},"Contribute here"),")")),o.a.createElement(r.MDXTag,{name:"p",components:n},o.a.createElement(r.MDXTag,{name:"del",components:n,parentName:"p"},"Fully custom animations are always possible with Javascript integration of\nReact Animated, or any in React Web projects transforms and transitions are possible today.")),o.a.createElement(r.MDXTag,{name:"p",components:n},"Reach out with questions via our ",o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://slack.viewsdx.com/"}},"Slack Questions Channel"),".\nMention ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"@tom")," or ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"@dario")," to make sure that we get your notifications."))}}}]);