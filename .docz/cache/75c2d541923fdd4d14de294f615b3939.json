{"remainingRequest":"/Users/dario/opensource/docz/packages/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/dario/opensource/docz/node_modules/babel-preset-react-app/index.js\",{\"flow\":true}]],\"plugins\":[],\"cacheDirectory\":true,\"babelrc\":false}!/Users/dario/views/docs/ReactComponents/README.md","dependencies":[{"path":"/Users/dario/views/docs/ReactComponents/README.md","mtime":1532761906113},{"path":"/Users/dario/opensource/docz/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/dario/opensource/docz/packages/docz-core/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/dario/views/docs/ReactComponents/README.md\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nexport default (function (_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components,\n    props: {\n      \"id\": \"views-and-your-react-components\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h1\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#views-and-your-react-components\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"#\")), \"Views and your React components\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"If you want to use an existing React component as is, you can import it by\\ndefining it as a \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \".js\"), \" file and adding a \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"// @view\"), \" pragma at the top.\"), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"integration-pattern\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#integration-pattern\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"#\")), \"Integration pattern\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"E.g., say you have a file called \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Magic.js\"), \":\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"// @view\\nimport React from 'react'\\n\\nexport default props => props.word\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"You can now use that component as you would use any other view in your system:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Magic\\nword hey!\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"We'll be working on bridging NPM modules at some stage, but for now you can\\nbridge any external modules by hand.\"), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"google-maps-integration\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#google-maps-integration\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"#\")), \"Google Maps integration\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Here's an example with\\n\", React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://tomchentw.github.io/react-google-maps/\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"react-google-maps\"), \".\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"GoogleMap.js\")), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"// @view\\nimport { GoogleMap } from 'react-google-maps'\\nexport default ({ defaultCenterLat: lat, defaultCenterLng: lng, ...props }) => (\\n  <GoogleMap defaultCenter={{ lat, lng }} {...props}>\\n    {props.children}\\n  </GoogleMap>\\n)\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Marker.js\")), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"// @view\\nimport { Marker } from 'react-google-maps'\\nexport default ({ positionLat: lat, positionLng: lng, ...props }) => (\\n  <Marker position={{ lat, lng }} {...props} />\\n)\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Then in your view, following \", React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://tomchentw.github.io/react-google-maps/#usage--configuration\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"the example from their docs\"), \":\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"GoogleMap\\ndefaultZoom 0\\ndefaultCenterLat -34.397\\ndefaultCenterLng 150.644\\nMarker\\nonWhen <isMarkerShown\\npositionLat -34.397\\npositionLng 150.644\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"You will notice that we've renamed certain props and flattened them out. In\\norder to reduce the complexity of the language we made a decision not to allow\\ncomplex objects in views as props for now. This isn't set in stone though, so if\\nyou feel strong about it, let us know and we can work to enable a syntax like:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"GoogleMap\\ndefaultZoom 0\\ndefaultCenter\\nlat -34.397\\nlng 150.644\\nMarker\\nonWhen <isMarkerShown\\nposition\\nlat -34.397\\nlng 150.644\\n\")), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"loaders\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#loaders\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"#\")), \"Loaders\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Create \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Spinner.js\"), \" in your project and add this code to it:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"// @view\\nimport * as Spinners from 'react-spinners';\\nimport React from 'react';\\n\\nconst Spinner = ({ type, ...props }) => {\\n  const Type = Spinners[type];\\n  return <Type loading={true} {...props} />;\\n};\\nSpinner.defaultProps = {\\n  type: 'ClipLoader',\\n};\\nexport default Spinner;\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Views Moprher will auto-generate \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Spinner.view.js\"), \" file for you.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"You can now use a \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Spinner\"), \" block in any view on its own or together with setting a type of spinner:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Spinner\\ntype ClipLoader\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Here's the link to NPM package with all \", React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://www.npmjs.com/package/react-spinners\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"spinner options\"), \"\\nAnd here's the \", React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://www.davidhu.io/react-spinners/\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"demo page\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"img\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"src\": \"spinners-examples.png\",\n      \"alt\": \"Some spinners examples\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Customise your loader with additional properties:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Spinner\\ntype BarLoader\\nwidth 100\\nheight 4\\ncolor #ff8300\\n\")), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"viewfake\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#viewfake\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"#\")), \".view.fake\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"When you add a \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \".js\"), \" view, our toolset will let you define a \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \".view.fake\"), \" file\\nthat mocks your \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \".js\"), \" component. A \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \".js\"), \" component like our \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Magic\"), \" or\\n\", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"GoogleMap\"), \" components above are external and as such can't be modified in\\nViews. However, it's handy to have some kind of representation of them in your\\npreview. That's when the \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \".view.fake\"), \" comes into play. Take \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"GoogleMap\"), \" for\\nexample, it's fake view could look like:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"GoogleMapFake Image\\nsource ./google-map-fake.jpg\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Reach out with questions via our \", React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://slack.viewsdx.com/\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Slack Questions Channel\"), \".\\nMention \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"@tom\"), \" or \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"@dario\"), \" to make sure that we get your notifications.\"));\n});",{"version":3,"sources":["ReactComponents/README.md"],"names":["React","MDXTag","components","props"],"mappings":"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","sourceRoot":"/Users/dario/views/docs","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"views-and-your-react-components\"}}><MDXTag name=\"a\" components={components} parentName=\"h1\" props={{\"aria-hidden\":true,\"href\":\"#views-and-your-react-components\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Views and your React components`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you want to use an existing React component as is, you can import it by\ndefining it as a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.js`}</MDXTag>{` file and adding a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`// @view`}</MDXTag>{` pragma at the top.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"integration-pattern\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#integration-pattern\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Integration pattern`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`E.g., say you have a file called `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Magic.js`}</MDXTag>{`:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`// @view\nimport React from 'react'\n\nexport default props => props.word\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can now use that component as you would use any other view in your system:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`Magic\nword hey!\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`We'll be working on bridging NPM modules at some stage, but for now you can\nbridge any external modules by hand.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"google-maps-integration\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#google-maps-integration\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Google Maps integration`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Here's an example with\n`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://tomchentw.github.io/react-google-maps/\"}}>{`react-google-maps`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`GoogleMap.js`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`// @view\nimport { GoogleMap } from 'react-google-maps'\nexport default ({ defaultCenterLat: lat, defaultCenterLng: lng, ...props }) => (\n  <GoogleMap defaultCenter={{ lat, lng }} {...props}>\n    {props.children}\n  </GoogleMap>\n)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Marker.js`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`// @view\nimport { Marker } from 'react-google-maps'\nexport default ({ positionLat: lat, positionLng: lng, ...props }) => (\n  <Marker position={{ lat, lng }} {...props} />\n)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Then in your view, following `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://tomchentw.github.io/react-google-maps/#usage--configuration\"}}>{`the example from their docs`}</MDXTag>{`:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`GoogleMap\ndefaultZoom 0\ndefaultCenterLat -34.397\ndefaultCenterLng 150.644\nMarker\nonWhen <isMarkerShown\npositionLat -34.397\npositionLng 150.644\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`You will notice that we've renamed certain props and flattened them out. In\norder to reduce the complexity of the language we made a decision not to allow\ncomplex objects in views as props for now. This isn't set in stone though, so if\nyou feel strong about it, let us know and we can work to enable a syntax like:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`GoogleMap\ndefaultZoom 0\ndefaultCenter\nlat -34.397\nlng 150.644\nMarker\nonWhen <isMarkerShown\nposition\nlat -34.397\nlng 150.644\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"loaders\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#loaders\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Loaders`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Create `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Spinner.js`}</MDXTag>{` in your project and add this code to it:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`// @view\nimport * as Spinners from 'react-spinners';\nimport React from 'react';\n\nconst Spinner = ({ type, ...props }) => {\n  const Type = Spinners[type];\n  return <Type loading={true} {...props} />;\n};\nSpinner.defaultProps = {\n  type: 'ClipLoader',\n};\nexport default Spinner;\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Views Moprher will auto-generate `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Spinner.view.js`}</MDXTag>{` file for you.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can now use a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Spinner`}</MDXTag>{` block in any view on its own or together with setting a type of spinner:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`Spinner\ntype ClipLoader\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Here's the link to NPM package with all `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://www.npmjs.com/package/react-spinners\"}}>{`spinner options`}</MDXTag>{`\nAnd here's the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"http://www.davidhu.io/react-spinners/\"}}>{`demo page`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"spinners-examples.png\",\"alt\":\"Some spinners examples\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Customise your loader with additional properties:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`Spinner\ntype BarLoader\nwidth 100\nheight 4\ncolor #ff8300\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"viewfake\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#viewfake\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`.view.fake`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When you add a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.js`}</MDXTag>{` view, our toolset will let you define a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.view.fake`}</MDXTag>{` file\nthat mocks your `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.js`}</MDXTag>{` component. A `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.js`}</MDXTag>{` component like our `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Magic`}</MDXTag>{` or\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`GoogleMap`}</MDXTag>{` components above are external and as such can't be modified in\nViews. However, it's handy to have some kind of representation of them in your\npreview. That's when the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.view.fake`}</MDXTag>{` comes into play. Take `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`GoogleMap`}</MDXTag>{` for\nexample, it's fake view could look like:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`GoogleMapFake Image\nsource ./google-map-fake.jpg\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Reach out with questions via our `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://slack.viewsdx.com/\"}}>{`Slack Questions Channel`}</MDXTag>{`.\nMention `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`@tom`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`@dario`}</MDXTag>{` to make sure that we get your notifications.`}</MDXTag></MDXTag>\n  "]}]}