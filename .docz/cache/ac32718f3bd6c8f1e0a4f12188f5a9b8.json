{"remainingRequest":"/Users/dario/opensource/docz/packages/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/dario/opensource/docz/node_modules/babel-preset-react-app/index.js\",{\"flow\":true}]],\"plugins\":[],\"cacheDirectory\":true,\"babelrc\":false}!/Users/dario/views/docs/Properties/README.md","dependencies":[{"path":"/Users/dario/views/docs/Properties/README.md","mtime":1532761906112},{"path":"/Users/dario/opensource/docz/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/dario/opensource/docz/packages/docz-core/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nexport default (function (_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components,\n    props: {\n      \"id\": \"use-properties-to-style-blocks\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h1\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#use-properties-to-style-blocks\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"Use properties to style blocks\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Properties define the style and type of all Blocks used in a view.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"There are two kinds of properties:\"), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"em\",\n    components: components,\n    parentName: \"li\"\n  }, \"Internal\"), \": value is defined in the same .view file.\\nExample: \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"text Buy Now\"), \", \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"color red\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"em\",\n    components: components,\n    parentName: \"li\"\n  }, \"External\"), \": value comes from somewhere else (.view.logic.js, service, back-end).\\nExample: \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"text <\"), \", \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"text <label\"))), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"internal-properties\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#internal-properties\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"Internal properties\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Views styling properties are based on regular CSS to lower the learning curve\\nfor front end developers.\"), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"flexbox\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h3\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#flexbox\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"Flexbox\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Flexbox is a part of CSS standards. We use flexbox to manage layout composition\\nof blocks, specifically, we use it to control:\"), React.createElement(MDXTag, {\n    name: \"ol\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, \"Sizing\"), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, \"Alignment\"), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, \"Distribution\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\"\n    }\n  }, \"If you're curious about you can read more about flexbox here\"), \".\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"See the \", React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"../QUIRKS.md\"\n    }\n  }, \"quirks\"), \" for a few cases in which we've spotted flex wasn't\\ncutting it for us.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Every block, by default, has \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"display flex\"), \" property enabled.\\nHorizontals have \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"flexDirection\"), \" set to \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"row\"), \", and Verticals to \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"column\"), \".\"), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"all-supported-properties\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h3\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#all-supported-properties\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"All supported properties\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"AllStylingProperties.md\"\n    }\n  }, \"Go to the list of all properties\")), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"external-properties-also-called-slots\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#external-properties-also-called-slots\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"External properties, also called Slots\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Say, you want to change the label of a button dynamically depending on the View\\nwhere the button is being used?\\nTo achieve that, add \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"<\"), \" before the value, like here \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"text < value\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Here's an example of how to turn a Internal property \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"text\"), \" from \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"Buy Now\"), \" to an External\\nproperty as a dynamic value, managed through \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"slots\"), \".\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, \"before\"), \":\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    }\n  }, \"Text\\ntext Buy Now\\nfontSize 20\\ncolor #f7941e\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, \"after\"), \":\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    }\n  }, \"Text\\ntext < Buy Now\\nfontSize 20\\ncolor #f7941e\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Let's call that view \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"Label.view\"), \" and save it in the project folder.\\nWhen you use it in another view, pass any other value using the same name of the\\nproperty:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    }\n  }, \"Label\\ntext Get New!!!\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Otherwise, if you just use \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"Label\"), \" view the default value will be used, so using:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    }\n  }, \"Label\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"will result in showing \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"Text\"), \" block with \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"Buy Now\"), \" value in your final build.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"You can also keep passing it too as a different slot, but it's usually not advised\\nto give slots custom names:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    }\n  }, \"Text\\ntext <label Buy Now\\nfontSize 20\\ncolor #f7941e\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"The reason why we don't advise to use custom slot names is because you will have to\\nremember what you called it, and that introduces unnecessary complexity:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    }\n  }, \"Label\\nlabel Buy Now\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Reach out with questions via our \", React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://slack.viewsdx.com/\"\n    }\n  }, \"Slack Questions Channel\"), \".\\nMention \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"@tom\"), \" or \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"@dario\"), \" to make sure that we get your notifications.\"));\n});",{"version":3,"sources":["Properties/README.md"],"names":["React","MDXTag","components","props"],"mappings":"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","sourceRoot":"/Users/dario/views/docs","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"use-properties-to-style-blocks\"}}><MDXTag name=\"a\" components={components} parentName=\"h1\" props={{\"aria-hidden\":true,\"href\":\"#use-properties-to-style-blocks\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Use properties to style blocks`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Properties define the style and type of all Blocks used in a view.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There are two kinds of properties:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"em\" components={components} parentName=\"li\">{`Internal`}</MDXTag>{`: value is defined in the same .view file.\nExample: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`text Buy Now`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`color red`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"em\" components={components} parentName=\"li\">{`External`}</MDXTag>{`: value comes from somewhere else (.view.logic.js, service, back-end).\nExample: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`text <`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`text <label`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"internal-properties\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#internal-properties\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Internal properties`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Views styling properties are based on regular CSS to lower the learning curve\nfor front end developers.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"flexbox\"}}><MDXTag name=\"a\" components={components} parentName=\"h3\" props={{\"aria-hidden\":true,\"href\":\"#flexbox\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Flexbox`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Flexbox is a part of CSS standards. We use flexbox to manage layout composition\nof blocks, specifically, we use it to control:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Sizing`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Alignment`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Distribution`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\"}}>{`If you're curious about you can read more about flexbox here`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`See the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"../QUIRKS.md\"}}>{`quirks`}</MDXTag>{` for a few cases in which we've spotted flex wasn't\ncutting it for us.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Every block, by default, has `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`display flex`}</MDXTag>{` property enabled.\nHorizontals have `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`flexDirection`}</MDXTag>{` set to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`row`}</MDXTag>{`, and Verticals to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`column`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"all-supported-properties\"}}><MDXTag name=\"a\" components={components} parentName=\"h3\" props={{\"aria-hidden\":true,\"href\":\"#all-supported-properties\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`All supported properties`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"AllStylingProperties.md\"}}>{`Go to the list of all properties`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"external-properties-also-called-slots\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#external-properties-also-called-slots\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`External properties, also called Slots`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Say, you want to change the label of a button dynamically depending on the View\nwhere the button is being used?\nTo achieve that, add `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<`}</MDXTag>{` before the value, like here `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`text < value`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Here's an example of how to turn a Internal property `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`text`}</MDXTag>{` from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Buy Now`}</MDXTag>{` to an External\nproperty as a dynamic value, managed through `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`slots`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`before`}</MDXTag>{`:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Text\ntext Buy Now\nfontSize 20\ncolor #f7941e\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`after`}</MDXTag>{`:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Text\ntext < Buy Now\nfontSize 20\ncolor #f7941e\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Let's call that view `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Label.view`}</MDXTag>{` and save it in the project folder.\nWhen you use it in another view, pass any other value using the same name of the\nproperty:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Label\ntext Get New!!!\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Otherwise, if you just use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Label`}</MDXTag>{` view the default value will be used, so using:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Label\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`will result in showing `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Text`}</MDXTag>{` block with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Buy Now`}</MDXTag>{` value in your final build.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can also keep passing it too as a different slot, but it's usually not advised\nto give slots custom names:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Text\ntext <label Buy Now\nfontSize 20\ncolor #f7941e\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The reason why we don't advise to use custom slot names is because you will have to\nremember what you called it, and that introduces unnecessary complexity:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Label\nlabel Buy Now\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Reach out with questions via our `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://slack.viewsdx.com/\"}}>{`Slack Questions Channel`}</MDXTag>{`.\nMention `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`@tom`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`@dario`}</MDXTag>{` to make sure that we get your notifications.`}</MDXTag></MDXTag>\n  "]}]}