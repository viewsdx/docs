{"remainingRequest":"/Users/dario/opensource/docz/packages/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/dario/opensource/docz/node_modules/babel-preset-react-app/index.js\",{\"flow\":true}]],\"plugins\":[],\"cacheDirectory\":true,\"babelrc\":false}!/Users/dario/views/docs/Conventions/README.md","dependencies":[{"path":"/Users/dario/views/docs/Conventions/README.md","mtime":1532761906110},{"path":"/Users/dario/opensource/docz/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/dario/opensource/docz/packages/docz-core/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/dario/views/docs/Conventions/README.md\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nexport default (function (_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components,\n    props: {\n      \"id\": \"useful-conventions\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h1\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#useful-conventions\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"#\")), \"Useful Conventions\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Based on extensive testing we've created these rules to help you optimize the workflow.\"), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"always-name-blocks\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#always-name-blocks\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"#\")), \"Always name blocks\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"This is better\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Button Vetrical\\nonClick <buy\\nLabel Text\\ntext Buy Now!\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Than this\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Vetrical\\nonClick <buy\\nText\\ntext Buy Now!\\n\")), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"extract-blocks-as-view-files-to-keep-the-composition-simple\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#extract-blocks-as-view-files-to-keep-the-composition-simple\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"#\")), \"Extract blocks as view files to keep the composition simple\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"This is better\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Button\\nonClick <buy\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Than this\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Button Vetrical\\nonClick <buy\\nLabel Text\\ntext Buy Now!\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Where \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Button\"), \" is a \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Button.view\"), \" file\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Button Vetrical\\nonClick <\\nLabel Text\\ntext Buy Now!\\n\")), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"dont-name-slots-unless-you-absolutely-have-to\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#dont-name-slots-unless-you-absolutely-have-to\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"#\")), \"Don\\u2019t name slots unless you absolutely have to\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"This is better\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Label Text\\ntext < Buy Now\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Than this\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Label Text\\ntext <label\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"If you avoid naming slots, you can use the properties by the same name at the point of use\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Label\\ntext Buy Now!\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Otherwise, you would have to remember what is the custom name of the slot\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Label\\nlabel Buy Now!\\n\")), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"keep-slots-simple\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#keep-slots-simple\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"#\")), \"Keep slots simple\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"This is better\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Label Text\\nonWhen <isVisible\\ntext Buy Now!\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Than this\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Label Text\\nonWhen <button.isVisible\\ntext Buy Now!\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Manage these in the logic file and expose simple slot back to the view like the\\none above \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"<isVisible\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Simple slots are easier for designers to reason about and they are editable\\nin the Views Tools.\"), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"dont-repeat-blocks-use-lists\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#dont-repeat-blocks-use-lists\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"#\")), \"Don't repeat blocks, use lists\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"This is better\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Books List\\nfrom <\\nBook\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Than this\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Book\\n\\nBook\\n\\nBook\\n\\nBook\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"In design tools, we tend to duplicate elements in the layout to represent the lists.\\nIn production, we use lists with data passed dynamically from external data.\"), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"design-system-folders\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#design-system-folders\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"#\")), \"Design System folders\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Any folders you create inside of the \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"src\"), \" in your project will be recognized by\\nViews Tools and displayed on the side nav.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Here's the example structure that usually works for modern applications, but you\\ncan organize your project the way fits your needs:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Buttons\\nCaptures\\nCards\\nCustom\\nIcons\\nImages\\nLists\\nMain\\nMicroCopy\\nNavigation\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"img\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"src\": \"FoldersSample.png\",\n      \"alt\": \"Folders in Views Tools\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), \"\\nAny .view files saved in the main \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"src\"), \" folder will be shown in \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Ungrouped\"), \" folder\\nin Views Tools.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"If you use \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Main\"), \" folder to keep the top level views of your application, it will be\\na default folder in Views Tools, making it easy to explore the layouts to designers.\"), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"for-readability-put-the-onwhen-property-as-a-first-line-below-the-blocks-name\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#for-readability-put-the-onwhen-property-as-a-first-line-below-the-blocks-name\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"#\")), \"For readability, put the onWhen property as a first line below the block's name\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"This reads better in Views Tools and in code\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Label Text\\nonWhen <isVisible\\nfontSize 14\\ncolor green\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Than this\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Label Text\\nfontSize 14\\ncolor green\\nonWhen <isVisible\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Reach out with questions via our \", React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://slack.viewsdx.com/\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Slack Questions Channel\"), \".\\nMention \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"@tom\"), \" or \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"@dario\"), \" to make sure that we get your notifications.\"));\n});",{"version":3,"sources":["Conventions/README.md"],"names":["React","MDXTag","components","props"],"mappings":"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","sourceRoot":"/Users/dario/views/docs","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"useful-conventions\"}}><MDXTag name=\"a\" components={components} parentName=\"h1\" props={{\"aria-hidden\":true,\"href\":\"#useful-conventions\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Useful Conventions`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Based on extensive testing we've created these rules to help you optimize the workflow.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"always-name-blocks\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#always-name-blocks\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Always name blocks`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is better`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Button Vetrical\nonClick <buy\nLabel Text\ntext Buy Now!\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Than this`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Vetrical\nonClick <buy\nText\ntext Buy Now!\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"extract-blocks-as-view-files-to-keep-the-composition-simple\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#extract-blocks-as-view-files-to-keep-the-composition-simple\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Extract blocks as view files to keep the composition simple`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is better`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Button\nonClick <buy\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Than this`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Button Vetrical\nonClick <buy\nLabel Text\ntext Buy Now!\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Where `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Button`}</MDXTag>{` is a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Button.view`}</MDXTag>{` file`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Button Vetrical\nonClick <\nLabel Text\ntext Buy Now!\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"dont-name-slots-unless-you-absolutely-have-to\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#dont-name-slots-unless-you-absolutely-have-to\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Don’t name slots unless you absolutely have to`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is better`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Label Text\ntext < Buy Now\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Than this`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Label Text\ntext <label\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you avoid naming slots, you can use the properties by the same name at the point of use`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Label\ntext Buy Now!\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Otherwise, you would have to remember what is the custom name of the slot`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Label\nlabel Buy Now!\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"keep-slots-simple\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#keep-slots-simple\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Keep slots simple`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is better`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Label Text\nonWhen <isVisible\ntext Buy Now!\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Than this`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Label Text\nonWhen <button.isVisible\ntext Buy Now!\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Manage these in the logic file and expose simple slot back to the view like the\none above `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<isVisible`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Simple slots are easier for designers to reason about and they are editable\nin the Views Tools.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"dont-repeat-blocks-use-lists\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#dont-repeat-blocks-use-lists\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Don't repeat blocks, use lists`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is better`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Books List\nfrom <\nBook\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Than this`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Book\n\nBook\n\nBook\n\nBook\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`In design tools, we tend to duplicate elements in the layout to represent the lists.\nIn production, we use lists with data passed dynamically from external data.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"design-system-folders\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#design-system-folders\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Design System folders`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Any folders you create inside of the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`src`}</MDXTag>{` in your project will be recognized by\nViews Tools and displayed on the side nav.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Here's the example structure that usually works for modern applications, but you\ncan organize your project the way fits your needs:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`Buttons\nCaptures\nCards\nCustom\nIcons\nImages\nLists\nMain\nMicroCopy\nNavigation\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"FoldersSample.png\",\"alt\":\"Folders in Views Tools\"}}></MDXTag>{`\nAny .view files saved in the main `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`src`}</MDXTag>{` folder will be shown in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Ungrouped`}</MDXTag>{` folder\nin Views Tools.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Main`}</MDXTag>{` folder to keep the top level views of your application, it will be\na default folder in Views Tools, making it easy to explore the layouts to designers.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"for-readability-put-the-onwhen-property-as-a-first-line-below-the-blocks-name\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#for-readability-put-the-onwhen-property-as-a-first-line-below-the-blocks-name\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`For readability, put the onWhen property as a first line below the block's name`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This reads better in Views Tools and in code`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Label Text\nonWhen <isVisible\nfontSize 14\ncolor green\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Than this`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Label Text\nfontSize 14\ncolor green\nonWhen <isVisible\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Reach out with questions via our `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://slack.viewsdx.com/\"}}>{`Slack Questions Channel`}</MDXTag>{`.\nMention `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`@tom`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`@dario`}</MDXTag>{` to make sure that we get your notifications.`}</MDXTag></MDXTag>\n  "]}]}