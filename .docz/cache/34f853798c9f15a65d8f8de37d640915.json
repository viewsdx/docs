{"remainingRequest":"/Users/dario/opensource/docz/packages/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/dario/opensource/docz/node_modules/babel-preset-react-app/index.js\",{\"flow\":true}]],\"plugins\":[],\"cacheDirectory\":true,\"babelrc\":false}!/Users/dario/views/docs/Blocks/README.md","dependencies":[{"path":"/Users/dario/views/docs/Blocks/README.md","mtime":1534156003691},{"path":"/Users/dario/opensource/docz/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/dario/opensource/docz/packages/docz-core/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nexport default (function (_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components,\n    props: {\n      \"id\": \"examples-of-basic-blocks---content-blocks\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h1\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#examples-of-basic-blocks---content-blocks\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"Examples of basic blocks - Content blocks\"), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"basic-text-block\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#basic-text-block\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"Basic Text block\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    }\n  }, \"Text\\ntext Buy Now!\\n\")), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"named-text-block\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#named-text-block\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"Named Text block\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    }\n  }, \"Label Text\\ntext Buy Now!\\n\")), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"text-block-with-interpolated-dynamic-prop\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#text-block-with-interpolated-dynamic-prop\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"Text block with interpolated dynamic prop\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"To embed dynamic values inside a text value, use a simple slot and pass the dynamic\\nvalue from the \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \".view.logic.js\"), \", like:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    }\n  }, \"Text\\ntext <greeting\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Then in the \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \".view.logic.js\"), \" file use:\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"greeting={\"), \"Welcome ${props.username}\", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"}\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"This will render in the view as \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"Welcome Joe\"), \".\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Another way of doing it would be to split the Text into two Text blocks:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    }\n  }, \"Horizontal\\nText\\ntext Welcome\\n\\nText\\ntext <username\\n\")), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"image\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#image\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"Image\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"Image\"), \" takes a \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"source\"), \" property, it can be a URL or a local file.\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    }\n  }, \"UserAvatar Image\\nsource https://viewsdx.s3.amazonaws.com/userAvatar.png\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"If you use Views Tools, save your images in \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"Images\"), \" folder inside your project. Tools will automatically convert all images from that folder into \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \".view\"), \" files and into React components (\", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \".view.js\"), \" files), when you open the project in Views Tools. You can treat the \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"Images\"), \" folder as a working directory and keep all your original files in there.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Important: Any files, images, SVGs, views have to start with a capital letter due to the way that JavaScript works.\"), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"captures\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#captures\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"Captures\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"Capture\"), \" is your way to accept written input from a user. We have a few types\\ndefined for this:\"), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"CaptureEmail\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"CaptureFile\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"CaptureInput\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"CaptureNumber\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"CapturePhone\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"CaptureSecure\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"CaptureText\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"CaptureTextArea\"))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"To set content of a any capture field use \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"placeholder\"), \" property. Example:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\"\n  }, \"Email CaptureEmail\\nplaceholder john@email.com\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"You can change the placeholder's styles with the \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"placeholder\"), \" scope:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\"\n  }, \"Email CaptureEmail\\ncolor blue\\nplaceholder john@email.com\\nwhen <placeholder\\ncolor green\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"To auto focus in a Capture field use \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"autoFocus\"), \" property. Example:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\"\n  }, \"CaptureText\\nautoFocus true\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"The React docs for \", React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://reactjs.org/docs/forms.html\"\n    }\n  }, \"DOM\"), \" and\\n\", React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://facebook.github.io/react-native/docs/textinput\"\n    }\n  }, \"native\"), \" apply.\\nIf you have very complex forms, I'd recommend you use\\n\", React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://github.com/jaredpalmer/formik\"\n    }\n  }, \"formik\"), \". It will help structure the\\nlogic for your forms without dictating UI.\"), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"getting-the-captures-value\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h3\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#getting-the-captures-value\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"Getting the Capture's value\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Say we have a view called \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"MyInput.view\"), \" like:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\"\n  }, \"MyInput CaptureText\\nvalue <\\nonChange <\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"To control and get its value we can add a logic file to it that deals with\\n\", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"value\"), \" and the \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"onChange\"), \" event:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\"\n  }, \"import MyInput from './MyInput.view.js'\\nimport React from 'react'\\n\\nclass MyInputLogic extends React.Component {\\n  state = {\\n    value: '' // starts empty\\n  }\\n\\n  onChange = event => {\\n    // React DOM and native differs in how you get the value for your inputs.\\n\\n    // For DOM use:\\n    this.setState({ value: event.target.value })\\n    // For Native use:\\n    this.setState({ value: event.nativeEvent.text })\\n  }\\n\\n  render() {\\n    return (\\n      <MyInput\\n        {...this.props}\\n        {...this.state}\\n        onChange={this.onChange}\\n      />\\n    )\\n  }\\n}\\nexport default MyInputLogic\\n\")), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"adding-a-keyboard-spacer-in-react-native\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h3\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#adding-a-keyboard-spacer-in-react-native\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"Adding a keyboard spacer in React Native\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"If you're coming from a web background, this could be a head scratcher since\\nnative apps expect us to manage how the software keyboard affects our UI. We've\\nused this code to some success in iOS so far. We would love to hear what worked\\nfor you!\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Add a \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"src/KeyboardSpacer.js\"), \" file to your project like this:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\"\n  }, \"// @view\\nimport { Platform } from 'react-native';\\nimport KeyboardSpacer from 'react-native-keyboard-spacer';\\nimport React from 'react';\\n\\nexport default props => Platform.OS === 'ios' ? <KeyboardSpacer {...props} /> : null;\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Add a \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"src/KeyboardSpacer.view.fake\"), \" file to tell Views Tools how\\nto display it while designing your app. This file won't be used in production.\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\"\n  }, \"KeyboardSpacerFake Vertical\\nImage\\nsource ./KeyboardSpacerFake.png\\nwidth 100%\\nheight 220\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Download \", React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"./KeyboardSpacerFake.png\"\n    }\n  }, \"KeyboardSpacerFake.png\"), \" to \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"src/KeyboardSpacerFake.png\"), \".\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Finally, use the spacer in your view like:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\"\n  }, \"Settings Vertical\\nflexGrow 1\\nflexShrink 1\\nflexBasis auto\\nCaptureText\\nvalue <\\nonChange <\\n\\nKeyboardSpacer\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"React Native has \", React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://facebook.github.io/react-native/docs/keyboardavoidingview\"\n    }\n  }, \"KeyboardAvoidingView\"), \"\\nbut it didn't really work for us as expected. There are also other alternatives\\nthat look promising, like \", React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://www.npmjs.com/package/react-native-spacer\"\n    }\n  }, \"react-native-spacer\"), \".\"), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"setting-the-return-key-typelabel-in-react-native\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h3\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#setting-the-return-key-typelabel-in-react-native\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"Setting the return key type/label in React Native\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Native apps let you specify how the return key that submits the user's input\\nlook like. In React Native you use the \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"returnKeyType\"), \" prop with one of the\\npossible values: \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"done\"), \", \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"go\"), \", \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"next\"), \", \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"search\"), \", or \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"send\"), \".\\n\", React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://facebook.github.io/react-native/docs/textinput#returnkeytype\"\n    }\n  }, \"Docs\"), \".\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\"\n  }, \"CaptureText\\nreturnKeyType go\\n\")), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"default-values-in-react-native\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h3\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#default-values-in-react-native\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"Default values in React Native\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"We've added the following defaults to Captures morphed to React Native that came\\nafter our use of it. You can override any of them:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\"\n  }, \"autoCorrect false\\nunderlineColorAndroid transparent\\ntextAlignVertical top\\n\")), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"svgs\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#svgs\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"Svgs\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"em\",\n    components: components,\n    parentName: \"p\"\n  }, \"SVGs are amazing\"), \". They let you do amazing graphics that scale like crazy.\\nOf course you can use an \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"Image\"), \" block to just show an SVG file as an image\\nbut if you want to do more crazy stuff with them, like animating parts of it\\nor changing how it looks like on the fly, you're better off using an \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"Svg\"), \"\\nblock. Inside it, you can use a these specific blocks:\"), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"SvgCircle\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"SvgEllipse\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"SvgGroup\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"SvgLinearGradient\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"SvgRadialGradient\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"SvgLine\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"SvgPath\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"SvgPolygon\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"SvgPolyline\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"SvgRect\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"SvgSymbol\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"SvgText\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"SvgUse\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"SvgDefs\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"SvgStop\"))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"While you can make an \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"Svg\"), \" by hand, like:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    }\n  }, \"Svg\\nviewBox 0 0 20 20\\nwidth 20\\nheight 20\\nSvgCircle\\ncx 10\\ncy 10\\nr 5\\nstroke deepskyblue\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Tips and trick on how to export SVGs to make them production compliant:\\nSketch App\\nSelect layers with arrows pointing down next to the name, right click and chose Ignore Underlying Masks option.\\n\", React.createElement(MDXTag, {\n    name: \"img\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"src\": \"SketchAppIgnoreMasks.png\",\n      \"alt\": \"Ignore masks in Sketch\"\n    }\n  })), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Illustrator\\nWhen you saving file as an Svg make sure to select Tiny 1.1 format:\\n\", React.createElement(MDXTag, {\n    name: \"img\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"src\": \"IllustratorSvgFormat.png\",\n      \"alt\": \"Format in Illustrator\"\n    }\n  })), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Rasterised masks will cause compilation errors:\\n\", React.createElement(MDXTag, {\n    name: \"img\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"src\": \"IllustratorMaskError.png\",\n      \"alt\": \"Masks error Illustrator\"\n    }\n  })), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"To avoid unwanted masks convert paths to Compound Paths:\\n\", React.createElement(MDXTag, {\n    name: \"img\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"src\": \"IllustratorConvertPaths.png\",\n      \"alt\": \"Illustrator convert paths\"\n    }\n  })), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"If you use Views Tools, save your Svgs in \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"Svgs\"), \" folder inside your project. Tools will automatically convert all Svgs from that folder into \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \".view\"), \" files and into React components (\", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \".view.js\"), \" files) when you open the project. You can treat the \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"Svgs\"), \" folder as a working directory and keep all your original files in there.\\n\", React.createElement(MDXTag, {\n    name: \"img\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"src\": \"SvgsFolder.png\",\n      \"alt\": \"Example of the folder structure with Svgs folder\"\n    }\n  })), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Important: Any files, images, SVGs, views have to start with a capital letter due to the way that JavaScript works.\"), React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components,\n    props: {\n      \"id\": \"containers\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h1\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#containers\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"Containers\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"em\",\n    components: components,\n    parentName: \"p\"\n  }, \"Container\"), \" blocks let you group blocks together. They are:\"), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"Vertical\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"Horizontal\")), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, \"List\"))), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"button\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#button\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"Button\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Button with an icon on the side:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    }\n  }, \"Button Horizontal\\nonClick props\\nIcon Svg\\nwidth 15\\nheight 15\\nviewBox 0 0 25 25\\nSvgPath\\nd M24.5 9.7c-.2-.4-.5-.6-.9-.7l-7.1-1-3.2-6.4c-.3-.7-1.5-.7-1.8 0L8.4 8l-7 1c-.4.1-.7.3-.9.7s0 .8.3 1l5.1 5-1.2 7.1c-.1.4.1.8.4 1 .2.1.4.2.6.2.2 0 .3 0 .5-.1l6.3-3.3 6.3 3.3c.3.2.7.1 1.1-.1.3-.2.5-.6.4-1l-1.2-7.1 5.1-5c.3-.3.4-.6.3-1z\\n\\n\\nLabel Text\\ntext Buy Now!\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Button with an icon on the top:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    }\n  }, \"Button Vertical\\nonClick props\\nIcon Svg\\nwidth 15\\nheight 15\\nviewBox 0 0 25 25\\nSvgPath\\nd M24.5 9.7c-.2-.4-.5-.6-.9-.7l-7.1-1-3.2-6.4c-.3-.7-1.5-.7-1.8 0L8.4 8l-7 1c-.4.1-.7.3-.9.7s0 .8.3 1l5.1 5-1.2 7.1c-.1.4.1.8.4 1 .2.1.4.2.6.2.2 0 .3 0 .5-.1l6.3-3.3 6.3 3.3c.3.2.7.1 1.1-.1.3-.2.5-.6.4-1l-1.2-7.1 5.1-5c.3-.3.4-.6.3-1z\\n\\n\\nLabel Text\\ntext Buy Now!\\n\")), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"list-of-cards\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#list-of-cards\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    }\n  }, \"#\")), \"List of cards\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"img\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"src\": \"People.png\",\n      \"alt\": \"List with cards\"\n    }\n  })), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"List of cards:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    }\n  }, \"People List\\nfrom <\\nUser\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"List repeats one view. The item has to be saved as a \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \".view\"), \" file within your project\\nand it CANNOT be a basic block, like Text or Image.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"In this example \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"User.view\"), \" file looks like this:\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"img\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"src\": \"User.png\",\n      \"alt\": \"One card\"\n    }\n  })), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    }\n  }, \"User Horizontal\\nAvatar Image\\nsource <userAvatar https://viewsdx.s3.amazonaws.com/userAvatar.png\\n\\nName Text\\ntext <userName Joe Summers\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"img\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"src\": \"UserStyled.png\",\n      \"alt\": \"Styled card\"\n    }\n  })), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Styled user card in a list would look more like this:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-views\"\n    }\n  }, \"User Horizontal\\nalignItems center\\npaddingTop 10\\npaddingLeft 10\\npaddingRight 10\\nmarginTop 10\\nmarginLeft 10\\nmarginRight 10\\nborderTop 1px solid #e6e6e6\\nAvatar Image\\nsource <userAvatar https://viewsdx.s3.amazonaws.com/userAvatar.png\\nwidth 40\\nheight 40\\n\\nName Text\\ntext <userName Joe Summers\\nfontSize 14\\nfontFamily Montserrat\\nfontWeight 300\\nmarginLeft 15\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"By default, list cards will be keyed by their order in the list (\", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"index\"), \"). To set the key\\nto something other than \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"index\"), \" in the list, add a \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"key\"), \" prop to the card like:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\"\n  }, \"List\\nfrom <\\nCard\\nkey id\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"It will map to \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"key={item.id}\"), \".\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Reach out with questions via our \", React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://slack.viewsdx.com/\"\n    }\n  }, \"Slack Questions Channel\"), \".\\nMention \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"@tom\"), \" or \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"@dario\"), \" to make sure that we get your notifications.\"));\n});",{"version":3,"sources":["Blocks/README.md"],"names":["React","MDXTag","components","props"],"mappings":"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","sourceRoot":"/Users/dario/views/docs","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"examples-of-basic-blocks---content-blocks\"}}><MDXTag name=\"a\" components={components} parentName=\"h1\" props={{\"aria-hidden\":true,\"href\":\"#examples-of-basic-blocks---content-blocks\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Examples of basic blocks - Content blocks`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"basic-text-block\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#basic-text-block\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Basic Text block`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Text\ntext Buy Now!\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"named-text-block\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#named-text-block\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Named Text block`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Label Text\ntext Buy Now!\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"text-block-with-interpolated-dynamic-prop\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#text-block-with-interpolated-dynamic-prop\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Text block with interpolated dynamic prop`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To embed dynamic values inside a text value, use a simple slot and pass the dynamic\nvalue from the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.view.logic.js`}</MDXTag>{`, like:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Text\ntext <greeting\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Then in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.view.logic.js`}</MDXTag>{` file use:`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`greeting={`}</MDXTag>{`Welcome \\${props.username}`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`}`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`This will render in the view as `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Welcome Joe`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Another way of doing it would be to split the Text into two Text blocks:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Horizontal\nText\ntext Welcome\n\nText\ntext <username\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"image\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#image\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Image`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Image`}</MDXTag>{` takes a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`source`}</MDXTag>{` property, it can be a URL or a local file.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`UserAvatar Image\nsource https://viewsdx.s3.amazonaws.com/userAvatar.png\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you use Views Tools, save your images in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Images`}</MDXTag>{` folder inside your project. Tools will automatically convert all images from that folder into `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.view`}</MDXTag>{` files and into React components (`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.view.js`}</MDXTag>{` files), when you open the project in Views Tools. You can treat the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Images`}</MDXTag>{` folder as a working directory and keep all your original files in there.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Important: Any files, images, SVGs, views have to start with a capital letter due to the way that JavaScript works.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"captures\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#captures\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Captures`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Capture`}</MDXTag>{` is your way to accept written input from a user. We have a few types\ndefined for this:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`CaptureEmail`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`CaptureFile`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`CaptureInput`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`CaptureNumber`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`CapturePhone`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`CaptureSecure`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`CaptureText`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`CaptureTextArea`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To set content of a any capture field use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`placeholder`}</MDXTag>{` property. Example:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`Email CaptureEmail\nplaceholder john@email.com\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can change the placeholder's styles with the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`placeholder`}</MDXTag>{` scope:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`Email CaptureEmail\ncolor blue\nplaceholder john@email.com\nwhen <placeholder\ncolor green\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`To auto focus in a Capture field use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`autoFocus`}</MDXTag>{` property. Example:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`CaptureText\nautoFocus true\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The React docs for `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://reactjs.org/docs/forms.html\"}}>{`DOM`}</MDXTag>{` and\n`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://facebook.github.io/react-native/docs/textinput\"}}>{`native`}</MDXTag>{` apply.\nIf you have very complex forms, I'd recommend you use\n`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/jaredpalmer/formik\"}}>{`formik`}</MDXTag>{`. It will help structure the\nlogic for your forms without dictating UI.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"getting-the-captures-value\"}}><MDXTag name=\"a\" components={components} parentName=\"h3\" props={{\"aria-hidden\":true,\"href\":\"#getting-the-captures-value\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Getting the Capture's value`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Say we have a view called `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`MyInput.view`}</MDXTag>{` like:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`MyInput CaptureText\nvalue <\nonChange <\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`To control and get its value we can add a logic file to it that deals with\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`value`}</MDXTag>{` and the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`onChange`}</MDXTag>{` event:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`import MyInput from './MyInput.view.js'\nimport React from 'react'\n\nclass MyInputLogic extends React.Component {\n  state = {\n    value: '' // starts empty\n  }\n\n  onChange = event => {\n    // React DOM and native differs in how you get the value for your inputs.\n\n    // For DOM use:\n    this.setState({ value: event.target.value })\n    // For Native use:\n    this.setState({ value: event.nativeEvent.text })\n  }\n\n  render() {\n    return (\n      <MyInput\n        {...this.props}\n        {...this.state}\n        onChange={this.onChange}\n      />\n    )\n  }\n}\nexport default MyInputLogic\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"adding-a-keyboard-spacer-in-react-native\"}}><MDXTag name=\"a\" components={components} parentName=\"h3\" props={{\"aria-hidden\":true,\"href\":\"#adding-a-keyboard-spacer-in-react-native\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Adding a keyboard spacer in React Native`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you're coming from a web background, this could be a head scratcher since\nnative apps expect us to manage how the software keyboard affects our UI. We've\nused this code to some success in iOS so far. We would love to hear what worked\nfor you!`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Add a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`src/KeyboardSpacer.js`}</MDXTag>{` file to your project like this:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`// @view\nimport { Platform } from 'react-native';\nimport KeyboardSpacer from 'react-native-keyboard-spacer';\nimport React from 'react';\n\nexport default props => Platform.OS === 'ios' ? <KeyboardSpacer {...props} /> : null;\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Add a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`src/KeyboardSpacer.view.fake`}</MDXTag>{` file to tell Views Tools how\nto display it while designing your app. This file won't be used in production.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`KeyboardSpacerFake Vertical\nImage\nsource ./KeyboardSpacerFake.png\nwidth 100%\nheight 220\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Download `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"./KeyboardSpacerFake.png\"}}>{`KeyboardSpacerFake.png`}</MDXTag>{` to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`src/KeyboardSpacerFake.png`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Finally, use the spacer in your view like:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`Settings Vertical\nflexGrow 1\nflexShrink 1\nflexBasis auto\nCaptureText\nvalue <\nonChange <\n\nKeyboardSpacer\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`React Native has `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://facebook.github.io/react-native/docs/keyboardavoidingview\"}}>{`KeyboardAvoidingView`}</MDXTag>{`\nbut it didn't really work for us as expected. There are also other alternatives\nthat look promising, like `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://www.npmjs.com/package/react-native-spacer\"}}>{`react-native-spacer`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"setting-the-return-key-typelabel-in-react-native\"}}><MDXTag name=\"a\" components={components} parentName=\"h3\" props={{\"aria-hidden\":true,\"href\":\"#setting-the-return-key-typelabel-in-react-native\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Setting the return key type/label in React Native`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Native apps let you specify how the return key that submits the user's input\nlook like. In React Native you use the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`returnKeyType`}</MDXTag>{` prop with one of the\npossible values: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`done`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`go`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`next`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`search`}</MDXTag>{`, or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`send`}</MDXTag>{`.\n`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://facebook.github.io/react-native/docs/textinput#returnkeytype\"}}>{`Docs`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`CaptureText\nreturnKeyType go\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"default-values-in-react-native\"}}><MDXTag name=\"a\" components={components} parentName=\"h3\" props={{\"aria-hidden\":true,\"href\":\"#default-values-in-react-native\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Default values in React Native`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We've added the following defaults to Captures morphed to React Native that came\nafter our use of it. You can override any of them:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`autoCorrect false\nunderlineColorAndroid transparent\ntextAlignVertical top\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"svgs\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#svgs\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Svgs`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`SVGs are amazing`}</MDXTag>{`. They let you do amazing graphics that scale like crazy.\nOf course you can use an `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Image`}</MDXTag>{` block to just show an SVG file as an image\nbut if you want to do more crazy stuff with them, like animating parts of it\nor changing how it looks like on the fly, you're better off using an `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Svg`}</MDXTag>{`\nblock. Inside it, you can use a these specific blocks:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`SvgCircle`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`SvgEllipse`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`SvgGroup`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`SvgLinearGradient`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`SvgRadialGradient`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`SvgLine`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`SvgPath`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`SvgPolygon`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`SvgPolyline`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`SvgRect`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`SvgSymbol`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`SvgText`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`SvgUse`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`SvgDefs`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`SvgStop`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`While you can make an `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Svg`}</MDXTag>{` by hand, like:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Svg\nviewBox 0 0 20 20\nwidth 20\nheight 20\nSvgCircle\ncx 10\ncy 10\nr 5\nstroke deepskyblue\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Tips and trick on how to export SVGs to make them production compliant:\nSketch App\nSelect layers with arrows pointing down next to the name, right click and chose Ignore Underlying Masks option.\n`}<MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"SketchAppIgnoreMasks.png\",\"alt\":\"Ignore masks in Sketch\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Illustrator\nWhen you saving file as an Svg make sure to select Tiny 1.1 format:\n`}<MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"IllustratorSvgFormat.png\",\"alt\":\"Format in Illustrator\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Rasterised masks will cause compilation errors:\n`}<MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"IllustratorMaskError.png\",\"alt\":\"Masks error Illustrator\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`To avoid unwanted masks convert paths to Compound Paths:\n`}<MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"IllustratorConvertPaths.png\",\"alt\":\"Illustrator convert paths\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you use Views Tools, save your Svgs in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Svgs`}</MDXTag>{` folder inside your project. Tools will automatically convert all Svgs from that folder into `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.view`}</MDXTag>{` files and into React components (`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.view.js`}</MDXTag>{` files) when you open the project. You can treat the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Svgs`}</MDXTag>{` folder as a working directory and keep all your original files in there.\n`}<MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"SvgsFolder.png\",\"alt\":\"Example of the folder structure with Svgs folder\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Important: Any files, images, SVGs, views have to start with a capital letter due to the way that JavaScript works.`}</MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"containers\"}}><MDXTag name=\"a\" components={components} parentName=\"h1\" props={{\"aria-hidden\":true,\"href\":\"#containers\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Containers`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`Container`}</MDXTag>{` blocks let you group blocks together. They are:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Vertical`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Horizontal`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`List`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"button\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#button\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Button`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Button with an icon on the side:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Button Horizontal\nonClick props\nIcon Svg\nwidth 15\nheight 15\nviewBox 0 0 25 25\nSvgPath\nd M24.5 9.7c-.2-.4-.5-.6-.9-.7l-7.1-1-3.2-6.4c-.3-.7-1.5-.7-1.8 0L8.4 8l-7 1c-.4.1-.7.3-.9.7s0 .8.3 1l5.1 5-1.2 7.1c-.1.4.1.8.4 1 .2.1.4.2.6.2.2 0 .3 0 .5-.1l6.3-3.3 6.3 3.3c.3.2.7.1 1.1-.1.3-.2.5-.6.4-1l-1.2-7.1 5.1-5c.3-.3.4-.6.3-1z\n\n\nLabel Text\ntext Buy Now!\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Button with an icon on the top:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`Button Vertical\nonClick props\nIcon Svg\nwidth 15\nheight 15\nviewBox 0 0 25 25\nSvgPath\nd M24.5 9.7c-.2-.4-.5-.6-.9-.7l-7.1-1-3.2-6.4c-.3-.7-1.5-.7-1.8 0L8.4 8l-7 1c-.4.1-.7.3-.9.7s0 .8.3 1l5.1 5-1.2 7.1c-.1.4.1.8.4 1 .2.1.4.2.6.2.2 0 .3 0 .5-.1l6.3-3.3 6.3 3.3c.3.2.7.1 1.1-.1.3-.2.5-.6.4-1l-1.2-7.1 5.1-5c.3-.3.4-.6.3-1z\n\n\nLabel Text\ntext Buy Now!\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"list-of-cards\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#list-of-cards\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`List of cards`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"People.png\",\"alt\":\"List with cards\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`List of cards:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`People List\nfrom <\nUser\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`List repeats one view. The item has to be saved as a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.view`}</MDXTag>{` file within your project\nand it CANNOT be a basic block, like Text or Image.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In this example `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`User.view`}</MDXTag>{` file looks like this:`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"User.png\",\"alt\":\"One card\"}}></MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`User Horizontal\nAvatar Image\nsource <userAvatar https://viewsdx.s3.amazonaws.com/userAvatar.png\n\nName Text\ntext <userName Joe Summers\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"UserStyled.png\",\"alt\":\"Styled card\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Styled user card in a list would look more like this:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-views\"}}>{`User Horizontal\nalignItems center\npaddingTop 10\npaddingLeft 10\npaddingRight 10\nmarginTop 10\nmarginLeft 10\nmarginRight 10\nborderTop 1px solid #e6e6e6\nAvatar Image\nsource <userAvatar https://viewsdx.s3.amazonaws.com/userAvatar.png\nwidth 40\nheight 40\n\nName Text\ntext <userName Joe Summers\nfontSize 14\nfontFamily Montserrat\nfontWeight 300\nmarginLeft 15\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`By default, list cards will be keyed by their order in the list (`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`index`}</MDXTag>{`). To set the key\nto something other than `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`index`}</MDXTag>{` in the list, add a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`key`}</MDXTag>{` prop to the card like:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`List\nfrom <\nCard\nkey id\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`It will map to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`key={item.id}`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Reach out with questions via our `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://slack.viewsdx.com/\"}}>{`Slack Questions Channel`}</MDXTag>{`.\nMention `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`@tom`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`@dario`}</MDXTag>{` to make sure that we get your notifications.`}</MDXTag></MDXTag>\n  "]}]}